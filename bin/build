#!/usr/bin/env bash
# vim: ft=bash

set -e

cd "$(dirname "${BASH_SOURCE[0]}")/.."

build_native_image() {
    local uberjar_path="target/dynr53.jar"
    local native_image_tool="$GRAAL_HOME/bin/native-image"

    if [[ -z $GRAAL_HOME ]]; then
        echo "GRAAL_HOME not set" >&2
        echo "Download from: https://github.com/graalvm/graalvm-ce-builds/releases" >&2
        exit 1
    elif [[ ! -x $native_image_tool ]]; then
        echo "Graal native-image tool not found at $native_image_tool" >&2
        echo "If necessary, run: $GRAAL_HOME/bin/gu install native-image" >&2
        exit 2
    fi

    clojure -T:build uberjar

    $native_image_tool \
        -H:Name=dynr53 \
        -H:+ReportExceptionStackTraces \
        --verbose \
        --no-fallback \
        --native-image-info \
        --install-exit-handlers \
        -J-Xms3G -J-Xmx3G \
        -J-Dclojure.compiler.direct-linking=true \
        -J-Dclojure.spec.skip-macros=true \
        -jar $uberjar_path

    ls -lh dynr53
}

if [[ $1 = clean ]]; then
    rm -rf target
elif [[ $1 = check ]]; then
    exec clojure -M:check
elif [[ $1 = native-image ]]; then
    build_native_image
else
    exec clojure -T:build "$@"
fi
